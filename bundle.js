!function(n){var t={};function c(e){if(t[e])return t[e].exports;var g=t[e]={i:e,l:!1,exports:{}};return n[e].call(g.exports,g,g.exports,c),g.l=!0,g.exports}c.m=n,c.c=t,c.d=function(n,t,e){c.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:e})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,t){if(1&t&&(n=c(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(c.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)c.d(e,g,function(t){return n[t]}.bind(null,g));return e},c.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(t,"a",t),t},c.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},c.p="",c(c.s=0)}([function(n,t,c){c(2),n.exports=c(1)},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "app.css";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcHAuc2Nzcz81ZTM1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFwcC5jc3NcIjsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/cards.js\nconst cards = [\n  'f527',\n  'f526',\n  'f441',\n  'f43c',\n  'f447',\n  'f443',\n  'f445',\n  'f004',\n  'f118',\n  'f3a5',\n  'f13d',\n  'f1d8',\n  'f0ac',\n  'f5d1',\n  'f1bb',\n  'f72f',\n  'f564',\n  'f55f',\n  'f523',\n  'f434',\n  'f1b0',\n  'f717',\n  'f6b7',\n  'f6bb',\n  'f458'\n];\n\nconst fieldsize = [\n  8, 15, 24\n];\n\n// CONCATENATED MODULE: ./src/js/game.js\n\r\n\r\n\r\nclass game_Game {\r\n\r\n  constructor (params) {\r\n    this.startNewGame(params);\r\n  }\r\n\r\n  startNewGame (params) {\r\n    this.defaultParams = {\r\n      cardsNumber: fieldsize[params.fieldsizeId - 1],\r\n      playersNumber: 1,\r\n      gameContainer: document.querySelector('#game-container'),\r\n      stateBarContainer: document.querySelector('#state-bar')\r\n    };\r\n    this.params = Object.assign(this.defaultParams, params);\r\n\r\n    this.params.gameContainer.className = `cards-container fieldsize${this.params.fieldsizeId}`;\r\n\r\n    this.init();\r\n\r\n    this.params.gameContainer.addEventListener('click', e => {\r\n      e.preventDefault();\r\n      this.clickCardHandler(e);\r\n    });\r\n  }\r\n\r\n  clickCardHandler ({target}) {\r\n\r\n    if (target.hasAttribute('data-code') && !target.classList.contains('show')) {\r\n\r\n      const flipCard = () => {\r\n        target.classList.toggle('show');\r\n        target.dataset.ischecked = true;\r\n        this.state.openCards.push(target);\r\n        this.state.flipped++;\r\n      };\r\n      const getCardCode = ind => {\r\n        return this.state.openCards[ind].dataset.code;\r\n      };\r\n\r\n      switch (this.state.stage)  {\r\n        case 0:\r\n          this.state.isGameProceed = true;\r\n          this.setTimer();\r\n          flipCard();\r\n          this.state.stage = 2;\r\n          this.state.messageInd = 1;\r\n          break;\r\n        case 1:\r\n          this.state.openCards.forEach(el => el.classList.toggle('show'));\r\n          this.state.openCards = [];\r\n          flipCard();\r\n          this.state.stage = 2;\r\n          this.state.messageInd = 1;\r\n          break;\r\n        case 2:\r\n          flipCard();\r\n          this.state.stage = 1;\r\n          this.state.messageInd = 2;\r\n          if (getCardCode(0) === getCardCode(1)) {\r\n            this.state.openCards.forEach(el => el.classList.add('close'));\r\n            this.state.score--;\r\n            this.state.messageInd = 3;\r\n            if ( this.state.score <= 0 ) {\r\n              this.state.isGameProceed = false;\r\n              this.gameOver();\r\n            }\r\n          }\r\n          break;\r\n      }\r\n      this.showState();\r\n    }\r\n  }\r\n\r\n  init () {\r\n    this.state = {\r\n      isGameProceed: false,\r\n      isMessage: false,\r\n      stage: 0,                         // 0 - init game, 1 - first flip, 2 - second flip\r\n      score: this.params.cardsNumber,   // unclosed cards' number\r\n      flipped: 0,                       // flips number\r\n      openCards: [],\r\n      messageInd: 0,\r\n      gameMessage: [\r\n        'Click card to start!',\r\n        'Chose another one',\r\n        'Try again! Click another card',\r\n        'Congratulation! Try again!'\r\n      ]\r\n    };\r\n    this.rend = {\r\n      messageEl: this.params.stateBarContainer.querySelector('.hint'),\r\n      timeEl: this.params.stateBarContainer.querySelector('.time'),\r\n      scoreEl: this.params.stateBarContainer.querySelector('.score'),\r\n      flippedEl: this.params.stateBarContainer.querySelector('.flipped')\r\n    };\r\n    if ( !this.state.isMessage ) {\r\n      this.rend.messageEl.hidden = true;\r\n    }\r\n    this.rend.timeEl.innerHTML = 'Time: 0 sec';\r\n    this.showState();\r\n    this.dealCards();\r\n  }\r\n\r\n  showState () {\r\n    this.rend.messageEl.innerHTML = this.showMessage(this.state.messageInd);\r\n    this.rend.scoreEl.innerHTML = `${(this.params.cardsNumber - this.state.score) * 2}\r\n      / ${this.params.cardsNumber * 2}`;\r\n    this.rend.flippedEl.innerHTML = `Flipped: ${this.state.flipped}`;\r\n  }\r\n\r\n  showMessage (ind) {\r\n    return this.state.isMessage ? this.state.gameMessage[ind] : '';\r\n  }\r\n\r\n  setTimer () {\r\n    this.state.startTime = Date.now();\r\n    const showSeconds = () => {\r\n      const seconds = ((Date.now() - this.state.startTime) * 1e-3).toFixed();\r\n      if ( this.state.isGameProceed && !isNaN(parseFloat(seconds)) && isFinite(seconds) ) {\r\n        this.rend.timeEl.innerHTML = `Time: ${seconds} sec`;\r\n      }\r\n    };\r\n    this.state.timer = setInterval(showSeconds, 1000);\r\n  }\r\n\r\n  stopTimer () {\r\n    this.state.endTime = Date.now();\r\n    clearInterval(this.state.timer);\r\n  }\r\n\r\n  gameOver () {\r\n    this.stopTimer();\r\n    const gameIsOverEvent = new CustomEvent('gameIsOver', {\r\n      bubbles: true,\r\n      detail: this.state\r\n    });\r\n    document.dispatchEvent(gameIsOverEvent);\r\n  }\r\n\r\n  dealCards () {\r\n    const { gameContainer } = this.params;\r\n    let cardsMixed = cards.slice(0, this.params.cardsNumber);\r\n    cardsMixed = cardsMixed\r\n      .concat(cardsMixed)\r\n      .sort(() => Math.random() - 0.5);\r\n\r\n    let gameTemplate = '';\r\n\r\n    for (let i = 0; i < cardsMixed.length; i++) {\r\n      gameTemplate += `\r\n      <div class=\"card\">\r\n        <button data-code=\"${cardsMixed[i]}\" data-ischecked=\"false\">\r\n          <i class=\"fas\">&#x${cardsMixed[i]};</i>\r\n        </button>\r\n      </div>      \r\n      `;\r\n    }\r\n    gameContainer.innerHTML = gameTemplate;\r\n  }\r\n\r\n}\r\n\n// CONCATENATED MODULE: ./src/js/modal.js\nclass Modal {\n\n  constructor (params) {\n    this.defaultParams = {\n      name: '',\n      class: '',\n      logo: '<i class=\"far fa-window-maximize\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Modal Window',\n      content: '',\n      formContent: '',\n      confirmBtn: '<i class=\"fas fa-check-circle\"></i>OK'\n    };\n    this.params = Object.assign(this.defaultParams, params);\n  }\n\n  init () {\n    const modalTemplate = `\n<div class=\"modal-window ${this.params.class}\">\n  <header class=\"fb-row fb-between\">\n    ${this.params.logo}\n    <span>${this.params.title}</span>\n    <button class=\"close-btn\">\n      ${this.params.close}\n    </button>\n  </header>\n\n  <div class=\"main\">\n    <div class=\"fb-col fb-around\">\n      ${ this.params.content ? `\n      <div class=\"fb-col fb-around content\">\n        ${this.params.content}\n      </div>\n      ` : ''}\n      <div class=\"confirm\">\n        <form action=\"\" name=\"${this.params.name}\">\n          <div class=\"form-content\">\n            ${this.params.formContent}\n          </div>\n          <div class=\"form-confirm\">\n            <button class=\"cancel-btn\">\n              Cancel\n            </button>\n            <button class=\"confirm-btn\">\n              ${this.params.confirmBtn}\n            </button>\n          </div>\n\n        </form>\n      </div>\n    </div>\n    \n  </div>\n\n\n</div>\n    `;\n\n    const modalEl = document.createElement('div');\n    modalEl.classList.add('modal');\n    document.querySelector('body').appendChild(modalEl);\n    modalEl.innerHTML = modalTemplate;\n\n    modalEl.querySelector('.close-btn').addEventListener('click', event => {\n      event.preventDefault();\n      this.closeModal(modalEl);\n    });\n\n    modalEl.querySelector('.cancel-btn').addEventListener('click', event => {\n      event.preventDefault();\n      this.closeModal(modalEl);\n    });\n\n    this.modalEl = modalEl;\n\n  }\n\n  closeModal (el) {\n    document.querySelector('body').removeChild(el);\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/js/game-over-modal.js\n\n\nclass game_over_modal_GameOverModal extends Modal {\n\n  constructor (params, user) {\n\n    const formContent = `\n<label for=\"isSaveResult\">Save results</label>\n<input type=\"checkbox\" name=\"isSaveResult\"><br>\n<span class=\"warning\" hidden>for save results you have to be checked in</span><br>    \n    `;\n\n    const defaultParams = {\n      name: 'gameOverForm',\n      class: 'game-over-modal',\n      logo: '<i class=\"fas fa-award\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Congratulations! The Game Is Over!',\n      content: '',\n      formContent: formContent,\n      confirmBtn: 'Start New Game!'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n\n    super.init();\n\n    this.setFormHandler(user);\n\n  }\n\n  setFormHandler (user) {\n    if ( !user.id ) {\n      this.modalEl.querySelector('.warning').hidden = false;\n      this.modalEl.querySelector('input[type=\"checkbox\"]').disabled = true;\n    }\n  }\n\n  static parseResults (results) {\n    return `\n<h3>\n  Your results are: \n</h3>\n<p>Time: ${((results.endTime - results.startTime) * 1e-3).toFixed(2)}</p>\n<p>Total flips: ${results.flipped}</p>\n  \n  `;\n\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/js/http.js\nclass Http {\n\n  constructor () {\n    this.baseUrl = 'https://mblocks.jala.in.ua/db';\n  }\n\n  ajaxRequest (method, url, sendData = null) {\n    return new Promise( (resolve, reject) => {\n      const req = new XMLHttpRequest();\n      if (( method === 'GET' ) && !( sendData === null)) {\n        url = `${url}?jsonData=${JSON.stringify(sendData)}`;\n      }\n      req.open(method, url, true);\n      req.addEventListener('load', () => {\n        if ( req.status === 200 ) {\n          resolve(req.response);\n        } else {\n          const error = new Error(req.statusText);\n          error.code = req.status;\n          reject(error);\n        }\n      }, false);\n      req.addEventListener('error', () => {\n        reject(new Error('Network Error'));\n      }, false);\n      if (( method === 'POST' ) && !( sendData === null ))  {\n        req.send(`jsonData=${JSON.stringify(sendData)}`);\n      } else {\n        req.send();\n      }\n    });\n  }\n\n  loadResources (script) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/${script}`)\n      .then(resp => JSON.parse(resp), reason => reason);\n  }\n\n  loadAllResults () {\n    return this.loadResources('readresults.php');\n  }\n\n  loadAllUsers () {\n    return this.loadResources('readusers.php');\n  }\n\n  addUser (user) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/adduser2.php`, user)\n      .then(resp => JSON.parse(resp), reason => reason );\n  }\n\n  loginUser (user) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/confirmuser.php`, user)\n      .then(resp => JSON.parse(resp), reason => reason);\n  }\n\n  saveResult (result) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/saveresult.php`, result)\n      .then(resp => resp, reason => reason);\n  }\n}\n\n// CONCATENATED MODULE: ./src/js/login-modal.js\n\n\n\nclass login_modal_LoginUserModal extends Modal {\n\n  constructor (params) {\n\n    const formContent = `\n<label for=\"userLogin\">Login:</label><br>\n<input class=\"text-input\" type=\"text\" name=\"userLogin\" required maxlength=\"20\">\n<span class=\"error\" hidden=\"true\">\n\tInvalid login!\n</span><br>\n<label for=\"userPassword\">Password:</label><br>\n<input class=\"text-input\" type=\"password\" name=\"userPassword\" required maxlength=\"20\">\n<span class=\"error\" hidden=\"true\">\n\tInvalid password!\n</span><br>\n<label for=\"isNewUser\">New User</label>\n<input type=\"checkbox\" name=\"isNewUser\"><br>\n<span class=\"error warning\" id=\"warning\"></span>\n\n    `;\n\n    const defaultParams = {\n      name: 'loginUserForm',\n      class: 'login-modal',\n      logo: '<i class=\"fas fa-user-check\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Please, login',\n      formContent: formContent,\n      confirmBtn: 'Login'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n    super.init();\n    this.setFormEventHandlers();\n  }\n\n  setFormEventHandlers () {\n    this.confirmBtn = this.modalEl.querySelector('.confirm-btn');\n    this.confirmBtn.addEventListener('click', e => {\n      e.preventDefault();\n      this.login();\n    });\n    this.modalEl.querySelectorAll('.text-input').forEach( el => {\n      el.addEventListener('blur', e => {\n        e.target.nextSibling.nextSibling.hidden = this.checkInput(e.target.value);\n      });\n    });\n  }\n\n  login () {\n    const user = {};\n    user.name = document.forms.loginUserForm.userLogin.value;\n    user.password = document.forms.loginUserForm.userPassword.value;\n\n    const respHandler = resp => {\n      typeof resp === 'object' ?\n        generateUserLoginEvent(resp) :\n        showWarning(resp);\n    };\n\n    const generateUserLoginEvent = resp => {\n      const loginUserEvent = new CustomEvent('loginUser', {\n        bubbles: true,\n        detail: resp\n      });\n      document.dispatchEvent(loginUserEvent);\n      this.closeModal(this.modalEl);\n    };\n\n    const showWarning = resp => {\n      this.modalEl.querySelector('#warning').innerHTML = resp;\n    };\n\n    const http = new Http();\n\n    if ( document.forms.loginUserForm.isNewUser.checked ) {\n      http.addUser(user).then(resp => respHandler(resp));\n    } else  {\n      http.loginUser(user).then(resp => respHandler(resp));\n    }\n\n  }\n\n  checkInput (str) {\n    return /^[0-9a-zA-Zа-яієїА-ЯЄЇІ]+$/u.test(str);\n  }\n}\n\n\n// CONCATENATED MODULE: ./src/js/set-settings-modal.js\n\n\nclass set_settings_modal_SetSettingsModal extends Modal {\n\n  constructor (params, gameSettings) {\n\n    const formContent = `\n<fieldset class=\"radiogroup\">\n  <legend>Set field's size</legend>\n  <ul class=\"radio\">\n    <li>\n    <input type=\"radio\" name=\"fieldSizeId\" id=\"fieldSizeId1\" value=\"1\" />\n    <label for=\"fieldSizeId1\">beginner - 4 x 4</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"fieldSizeId\" id=\"fieldSizeId2\" value=\"2\" />\n    <label for=\"fieldSizeId2\">proficient - 6 x 5</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"fieldSizeId\" id=\"fieldSizeId3\" value=\"3\" />\n    <label for=\"fieldSizeId3\">expert - 8 x 6</label>\n    </li>\n  </ul>\n</fieldset>\n\n<fieldset class=\"radiogroup\">\n  <legend>Who is the opponent?</legend>\n  <ul class=\"radio\">\n    <li>\n    <input type=\"radio\" name=\"opponentId\" id=\"opponentId1\" value=\"1\" />\n    <label for=\"opponentId1\">one player</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"opponentId\" id=\"opponentId2\" value=\"2\" />\n    <label for=\"opponentId2\">vs Robot</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"opponentId\" id=\"opponentId3\" value=\"3\" />\n    <label for=\"opponentId3\">two players</label>\n    </li>\n  </ul>\n</fieldset>\n\n    `;\n\n    const defaultParams = {\n      name: 'setSettingsForm',\n      class: 'set-settings-modal',\n      logo: '<i class=\"fas fa-sliders-h\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Settings',\n      formContent: formContent,\n      confirmBtn: 'OK'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n    super.init();\n    this.setFormEventHandlers(gameSettings);\n  }\n\n  setFormEventHandlers (gameSettings) {\n    this.modalEl.querySelector(`#fieldSizeId${gameSettings.fieldsizeId}`).checked = true;\n    this.modalEl.querySelector(`#opponentId${gameSettings.opponentId}`).checked = true;\n\n    const generateSetGameSettingsEvent = settings => {\n      const setGameSettingsEvent = new CustomEvent('setGameSettings', {\n        bubbles: true,\n        detail: settings\n      });\n      document.dispatchEvent(setGameSettingsEvent);\n    };\n\n    this.confirmBtn = this.modalEl.querySelector('.confirm-btn');\n    this.confirmBtn.addEventListener('click', e => {\n      e.preventDefault();\n      const fielsizeValue = this.modalEl.querySelector('input[name=\"fieldSizeId\"]:checked').value;\n      gameSettings.fieldsizeId = parseInt(fielsizeValue);\n      const opponentValue = this.modalEl.querySelector('input[name=\"opponentId\"]:checked').value;\n      gameSettings.opponentId = parseInt(opponentValue);\n      generateSetGameSettingsEvent(gameSettings);\n      this.closeModal(this.modalEl);\n    });\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/js/best-results-modal.js\n\n\n\nclass best_results_modal_BestResultsModal extends Modal {\n\n  constructor (params, gameSettings, user) {\n\n    const defaultParams = {\n      name: 'BestResultsForm',\n      class: 'best-results-modal',\n      logo: '<i class=\"fas fa-trophy\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Best Results',\n      content: 'Best Results Tables',\n      formContent: '',\n      confirmBtn: 'OK'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n    super.init();\n    this.user = user;\n    this.http = new Http();\n\n    this.getResults(gameSettings).then( ([users, results]) => {\n      this.renderTables(users, results);\n    });\n\n    this.setHandlers();\n\n  }\n\n  getResults (gameSettings) {\n    return Promise.all([this.http.loadAllUsers(), this.http.loadAllResults()])\n      .then( ([users, results]) => {\n        return [\n          users,\n          results.filter( item => {\n            return ( parseInt(item.fieldsize_id) === gameSettings.fieldsizeId\n              && parseInt(item.opponent_id) === gameSettings.opponentId );\n          })\n        ];\n      });\n  }\n\n  setHandlers () {\n    this.modalEl.querySelector('.confirm-btn').addEventListener('click', event => {\n      event.preventDefault();\n      this.closeModal(this.modalEl);\n    });\n  }\n\n  renderTables (users, results) {\n\n    const getNameById = id => users.find(u => u.id === id).name;\n\n    const rendTableBody = results => {\n      let template = '';\n      let i = 1;\n      results.forEach( res => {\n        template += (`\n          <tr class=\"${ res.user_id === this.user.id ? 'user-own-res' : '' }\">\n            <td>${i++}</td>\n            <td>${getNameById(res.user_id)}</td>\n            <td>${(res.time * 1e-3).toFixed(2)}</td>\n            <td>${res.flips}</td>\n          </tr>        \n        `);\n      });\n      return template;\n    };\n\n    const rendTable = header => {\n      return `\n<div class=\"results-table-container\">\n  <h3>${header}</h3>\n  <table class=\"results-table\">\n    <tr>\n      <th>No</th>\n      <th>Name</th>\n      <th>Time</th>\n      <th>Flips</th>\n    </tr>\n    ${rendTableBody(results)}\n    </table>\n</div>    \n    `;\n    };\n\n    let template = '';\n    results.sort( (a, b) => parseInt(a.time) - parseInt(b.time) );\n    template += rendTable('Best Time:');\n    results.sort( (a, b) => parseInt(a.flips) - parseInt(b.flips) );\n    template += rendTable('Best Flips:');\n\n    this.modalEl.querySelector('.content').innerHTML = template;\n\n  }\n\n\n}\n\n// CONCATENATED MODULE: ./src/main.js\n\n\n\n\n\n\n\nconst main_user = {\n  id: 0,\n  name: ''\n};\n\nconst main_gameSettings = {\n  fieldsizeId: 2,\n  opponentId: 1\n};\n\nconst game = new game_Game(main_gameSettings);\n\ndocument.addEventListener('gameIsOver', event => {\n  event.preventDefault();\n  gameOverHandler(event.detail);\n});\n\ndocument.querySelector('#new-game-button').addEventListener('click', event => {\n  event.preventDefault();\n  startNewGame(main_gameSettings);\n});\n\ndocument.querySelector('#login-button').addEventListener('click', event => {\n  event.preventDefault();\n  loginUserHandler(main_user);\n});\n\ndocument.addEventListener('loginUser', event => {\n  event.preventDefault();\n  loginUserEventHandler(event.detail);\n});\n\ndocument.querySelector('#settings-button').addEventListener('click', event => {\n  event.preventDefault();\n  setSettings(main_gameSettings);\n});\n\ndocument.querySelector('#results-button').addEventListener('click', event => {\n  event.preventDefault();\n  showResultsButtonHandler(main_gameSettings, main_user);\n});\n\n\ndocument.addEventListener('setGameSettings', event => {\n  event.preventDefault();\n  Object.assign(main_gameSettings, event.detail);\n  startNewGame(main_gameSettings);\n});\n\nconst startNewGame = gameSettings => {\n  game.startNewGame(gameSettings);\n};\n\nconst setSettings = settings => {\n  const setSettingsModal = new set_settings_modal_SetSettingsModal({}, settings);\n};\n\nconst loginUserEventHandler = resp => {\n  Object.assign(main_user, resp);\n  document.querySelector('#login-button').innerHTML = `\n    <i class=\"fas fa-user-check\"></i>\n    <span>${main_user.name}</span>        \n`;\n};\n\nconst loginUserHandler = user => {\n  const loginUserModal = new login_modal_LoginUserModal();\n};\n\nconst gameOverHandler = results => {\n  const message = game_over_modal_GameOverModal.parseResults(results);\n  message.concat(' ');\n\n  const modal = new game_over_modal_GameOverModal({content: message}, main_user);\n\n  document.querySelector('.confirm-btn').addEventListener('click', event => {\n    event.preventDefault();\n    if ( document.forms.gameOverForm.isSaveResult.checked ) {\n      const sendData = {\n        user_id: main_user.id,\n        fieldsize_id: main_gameSettings.fieldsizeId,\n        opponent_id: main_gameSettings.opponentId,\n        time: results.endTime - results.startTime,\n        flips: results.flipped\n      };\n      const http = new Http();\n      http.saveResult(sendData);\n    }\n    startNewGame(main_gameSettings);\n    modal.closeModal(modal.modalEl);\n  });\n};\n\nconst showResultsButtonHandler = (gameSettings, user) => {\n  const bestResultsModal = new best_results_modal_BestResultsModal({}, gameSettings, user);\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")}]);