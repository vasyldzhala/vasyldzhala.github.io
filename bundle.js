!function(n){var t={};function e(I){if(t[I])return t[I].exports;var c=t[I]={i:I,l:!1,exports:{}};return n[I].call(c.exports,c,c.exports,e),c.l=!0,c.exports}e.m=n,e.c=t,e.d=function(n,t,I){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:I})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var I=Object.create(null);if(e.r(I),Object.defineProperty(I,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var c in n)e.d(I,c,function(t){return n[t]}.bind(null,c));return I},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t,e){e(2),n.exports=e(1)},function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__.p + "app.css";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcHAuc2Nzcz81ZTM1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImFwcC5jc3NcIjsiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/cards.js\nconst cards = [\n  'f527',\n  'f526',\n  'f441',\n  'f43c',\n  'f447',\n  'f443',\n  'f445',\n  'f004',\n  'f118',\n  'f3a5',\n  'f13d',\n  'f1d8',\n  'f0ac',\n  'f5d1',\n  'f1bb',\n  'f72f',\n  'f564',\n  'f55f',\n  'f523',\n  'f434',\n  'f1b0',\n  'f717',\n  'f6b7',\n  'f6bb',\n  'f458'\n];\n\nconst fieldsize = [\n  8, 15, 24\n];\n\n// CONCATENATED MODULE: ./src/js/game.js\n\n\n\nclass game_Game {\n\n  constructor (params) {\n    this.startNewGame(params);\n  }\n\n  startNewGame (params) {\n    this.defaultParams = {\n      cardsNumber: fieldsize[params.fieldsizeId - 1],\n      playersNumber: 1,\n      gameContainer: document.querySelector('#game-container'),\n      stateBarContainer: document.querySelector('#state-bar')\n    };\n    this.params = Object.assign(this.defaultParams, params);\n\n    this.params.gameContainer.className = `cards-container fieldsize${this.params.fieldsizeId}`;\n\n    this.init();\n    this.params.gameContainer.addEventListener('click', e => {\n      e.preventDefault();\n      this.clickCardHandler(e);\n    });\n  }\n\n  clickCardHandler ({target}) {\n\n    if (target.hasAttribute('data-code') && !target.classList.contains('show')) {\n\n      const flipCard = () => {\n        target.classList.toggle('show');\n        target.dataset.ischecked = true;\n        this.state.openCards.push(target);\n        this.state.flipped++;\n      };\n      const getCardCode = ind => {\n        return this.state.openCards[ind].dataset.code;\n      };\n\n      switch (this.state.stage)  {\n        case 0:\n          this.state.isGameProceed = true;\n          this.setTimer();\n          flipCard();\n          this.state.stage = 2;\n          this.state.messageInd = 1;\n          break;\n        case 1:\n          this.state.openCards.forEach(el => el.classList.toggle('show'));\n          this.state.openCards = [];\n          flipCard();\n          this.state.stage = 2;\n          this.state.messageInd = 1;\n          break;\n        case 2:\n          flipCard();\n          this.state.stage = 1;\n          this.state.messageInd = 2;\n          if (getCardCode(0) === getCardCode(1)) {\n            this.state.openCards.forEach(el => el.classList.add('close'));\n            this.state.score--;\n            this.state.messageInd = 3;\n            if ( this.state.score <= 0 ) {\n              this.state.isGameProceed = false;\n              this.gameOver();\n            }\n          }\n          break;\n      }\n      this.showState();\n    }\n  }\n\n  init () {\n    this.state = {\n      isGameProceed: false,\n      isMessage: false,\n      stage: 0,                         // 0 - init game, 1 - first flip, 2 - second flip\n      score: this.params.cardsNumber,   // unclosed cards' number\n      flipped: 0,                       // flips number\n      openCards: [],\n      messageInd: 0,\n      gameMessage: [\n        'Click card to start!',\n        'Chose another one',\n        'Try again! Click another card',\n        'Congratulation! Try again!'\n      ]\n    };\n    this.rend = {\n      messageEl: this.params.stateBarContainer.querySelector('.hint'),\n      timeEl: this.params.stateBarContainer.querySelector('.time'),\n      scoreEl: this.params.stateBarContainer.querySelector('.score'),\n      flippedEl: this.params.stateBarContainer.querySelector('.flipped')\n    };\n    if ( !this.state.isMessage ) {\n      this.rend.messageEl.hidden = true;\n    }\n    this.rend.timeEl.innerHTML = 'Time: 0 sec';\n    this.showState();\n    this.dealCards();\n  }\n\n  showState () {\n    this.rend.messageEl.innerHTML = this.showMessage(this.state.messageInd);\n    this.rend.scoreEl.innerHTML = `${(this.params.cardsNumber - this.state.score) * 2}\n      / ${this.params.cardsNumber * 2}`;\n    this.rend.flippedEl.innerHTML = `Flipped: ${this.state.flipped}`;\n  }\n\n  showMessage (ind) {\n    return this.state.isMessage ? this.state.gameMessage[ind] : '';\n  }\n\n  setTimer () {\n    this.state.startTime = Date.now();\n    const showSeconds = () => {\n      const seconds = ((Date.now() - this.state.startTime) * 1e-3).toFixed();\n      if ( this.state.isGameProceed && !isNaN(parseFloat(seconds)) && isFinite(seconds) ) {\n        this.rend.timeEl.innerHTML = `Time: ${seconds} sec`;\n      }\n    };\n    this.state.timer = setInterval(showSeconds, 1000);\n  }\n\n  stopTimer () {\n    this.state.endTime = Date.now();\n    clearInterval(this.state.timer);\n  }\n\n  gameOver () {\n    this.stopTimer();\n    const gameIsOverEvent = new CustomEvent('gameIsOver', {\n      bubbles: true,\n      detail: this.state\n    });\n    document.dispatchEvent(gameIsOverEvent);\n  }\n\n  dealCards () {\n    const { gameContainer } = this.params;\n    let cardsMixed = cards.slice(0, this.params.cardsNumber);\n    cardsMixed = cardsMixed\n      .concat(cardsMixed)\n      .sort(() => Math.random() - 0.5);\n\n    let gameTemplate = '';\n\n    for (let i = 0; i < cardsMixed.length; i++) {\n      gameTemplate += `\n      <div class=\"card\">\n        <button data-code=\"${cardsMixed[i]}\" data-ischecked=\"false\">\n          <i class=\"fas\">&#x${cardsMixed[i]};</i>\n        </button>\n      </div>      \n      `;\n    }\n    gameContainer.innerHTML = gameTemplate;\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/js/modal.js\nclass Modal {\n\n  constructor (params) {\n    this.defaultParams = {\n      name: '',\n      class: '',\n      logo: '<i class=\"far fa-window-maximize\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Modal Window',\n      content: '',\n      formContent: '',\n      confirmBtn: '<i class=\"fas fa-check-circle\"></i>OK'\n    };\n    this.params = Object.assign(this.defaultParams, params);\n  }\n\n  init () {\n    const modalTemplate = `\n<div class=\"modal-window ${this.params.class}\">\n  <header class=\"fb-row fb-between\">\n    ${this.params.logo}\n    <span>${this.params.title}</span>\n    <button class=\"close-btn\">\n      ${this.params.close}\n    </button>\n  </header>\n\n  <div class=\"main\">\n    <div class=\"fb-col fb-around\">\n      ${ this.params.content ? `\n      <div class=\"fb-col fb-around content\">\n        ${this.params.content}\n      </div>\n      ` : ''}\n      <div class=\"confirm\">\n        <form action=\"\" name=\"${this.params.name}\">\n          <div class=\"form-content\">\n            ${this.params.formContent}\n          </div>\n          <div class=\"form-confirm\">\n            <button class=\"cancel-btn\">\n              Cancel\n            </button>\n            <button class=\"confirm-btn\">\n              ${this.params.confirmBtn}\n            </button>\n          </div>\n\n        </form>\n      </div>\n    </div>\n    \n  </div>\n\n\n</div>\n    `;\n\n    const modalEl = document.createElement('div');\n    modalEl.classList.add('modal');\n    document.querySelector('body').appendChild(modalEl);\n    modalEl.innerHTML = modalTemplate;\n\n    modalEl.querySelector('.close-btn').addEventListener('click', event => {\n      event.preventDefault();\n      this.closeModal(modalEl);\n    });\n\n    modalEl.querySelector('.cancel-btn').addEventListener('click', event => {\n      event.preventDefault();\n      this.closeModal(modalEl);\n    });\n\n    this.modalEl = modalEl;\n\n  }\n\n  closeModal (el) {\n    document.querySelector('body').removeChild(el);\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/js/game-over-modal.js\n\n\nclass game_over_modal_GameOverModal extends Modal {\n\n  constructor (params, user) {\n\n    const formContent = `\n<label for=\"isSaveResult\">Save results</label>\n<input type=\"checkbox\" name=\"isSaveResult\"><br>\n<span class=\"warning\" hidden>for save results you have to be checked in</span><br>    \n    `;\n\n    const defaultParams = {\n      name: 'gameOverForm',\n      class: 'game-over-modal',\n      logo: '<i class=\"fas fa-award\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Congratulations! The Game Is Over!',\n      content: '',\n      formContent: formContent,\n      confirmBtn: 'Start New Game!'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n\n    super.init();\n\n    this.setFormHandler(user);\n\n  }\n\n  setFormHandler (user) {\n    if ( !user.id ) {\n      this.modalEl.querySelector('.warning').hidden = false;\n      this.modalEl.querySelector('input[type=\"checkbox\"]').disabled = true;\n    }\n  }\n\n  static parseResults (results) {\n    return `\n<h3>\n  Your results are: \n</h3>\n<p>Time: ${((results.endTime - results.startTime) * 1e-3).toFixed(2)}</p>\n<p>Total flips: ${results.flipped}</p>\n  \n  `;\n\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/js/http.js\nclass Http {\n\n  constructor () {\n    this.baseUrl = 'http://mblocks.jala.in.ua/db';\n  }\n\n  ajaxRequest (method, url, sendData = null) {\n    return new Promise( (resolve, reject) => {\n      const req = new XMLHttpRequest();\n      if (( method === 'GET' ) && !( sendData === null)) {\n        url = `${url}?jsonData=${JSON.stringify(sendData)}`;\n      }\n      req.open(method, url, true);\n      req.addEventListener('load', () => {\n        if ( req.status === 200 ) {\n          resolve(req.response);\n        } else {\n          const error = new Error(req.statusText);\n          error.code = req.status;\n          reject(error);\n        }\n      }, false);\n      req.addEventListener('error', () => {\n        reject(new Error('Network Error'));\n      }, false);\n      if (( method === 'POST' ) && !( sendData === null ))  {\n        req.send(`jsonData=${JSON.stringify(sendData)}`);\n      } else {\n        req.send();\n      }\n    });\n  }\n\n  loadResources (script) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/${script}`)\n      .then(resp => JSON.parse(resp), reason => reason);\n  }\n\n  loadAllResults () {\n    return this.loadResources('readresults.php');\n  }\n\n  loadAllUsers () {\n    return this.loadResources('readusers.php');\n  }\n\n  addUser (user) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/adduser2.php`, user)\n      .then(resp => JSON.parse(resp), reason => reason );\n  }\n\n  loginUser (user) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/confirmuser.php`, user)\n      .then(resp => JSON.parse(resp), reason => reason);\n  }\n\n  saveResult (result) {\n    return this.ajaxRequest('GET', `${this.baseUrl}/saveresult.php`, result)\n      .then(resp => resp, reason => reason);\n  }\n}\n\n// CONCATENATED MODULE: ./src/js/login-modal.js\n\n\n\nclass login_modal_LoginUserModal extends Modal {\n\n  constructor (params) {\n\n    const formContent = `\n<label for=\"userLogin\">Login:</label><br>\n<input class=\"text-input\" type=\"text\" name=\"userLogin\" required maxlength=\"20\">\n<span class=\"error\" hidden=\"true\">\n\tInvalid login!\n</span><br>\n<label for=\"userPassword\">Password:</label><br>\n<input class=\"text-input\" type=\"password\" name=\"userPassword\" required maxlength=\"20\">\n<span class=\"error\" hidden=\"true\">\n\tInvalid password!\n</span><br>\n<label for=\"isNewUser\">New User</label>\n<input type=\"checkbox\" name=\"isNewUser\"><br>\n<span class=\"error warning\" id=\"warning\"></span>\n\n    `;\n\n    const defaultParams = {\n      name: 'loginUserForm',\n      class: 'login-modal',\n      logo: '<i class=\"fas fa-user-check\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Please, login',\n      formContent: formContent,\n      confirmBtn: 'Login'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n    super.init();\n    this.setFormEventHandlers();\n  }\n\n  setFormEventHandlers () {\n    this.confirmBtn = this.modalEl.querySelector('.confirm-btn');\n    this.confirmBtn.addEventListener('click', e => {\n      e.preventDefault();\n      this.login();\n    });\n    this.modalEl.querySelectorAll('.text-input').forEach( el => {\n      el.addEventListener('blur', e => {\n        e.target.nextSibling.nextSibling.hidden = this.checkInput(e.target.value);\n      });\n    });\n  }\n\n  login () {\n    const user = {};\n    user.name = document.forms.loginUserForm.userLogin.value;\n    user.password = document.forms.loginUserForm.userPassword.value;\n\n    const respHandler = resp => {\n      typeof resp === 'object' ?\n        generateUserLoginEvent(resp) :\n        showWarning(resp);\n    };\n\n    const generateUserLoginEvent = resp => {\n      const loginUserEvent = new CustomEvent('loginUser', {\n        bubbles: true,\n        detail: resp\n      });\n      document.dispatchEvent(loginUserEvent);\n      this.closeModal(this.modalEl);\n    };\n\n    const showWarning = resp => {\n      this.modalEl.querySelector('#warning').innerHTML = resp;\n    };\n\n    const http = new Http();\n\n    if ( document.forms.loginUserForm.isNewUser.checked ) {\n      http.addUser(user).then(resp => respHandler(resp));\n    } else  {\n      http.loginUser(user).then(resp => respHandler(resp));\n    }\n\n  }\n\n  checkInput (str) {\n    return /^[0-9a-zA-Zа-яієїА-ЯЄЇІ]+$/u.test(str);\n  }\n}\n\n\n// CONCATENATED MODULE: ./src/js/set-settings-modal.js\n\n\nclass set_settings_modal_SetSettingsModal extends Modal {\n\n  constructor (params, gameSettings) {\n\n    const formContent = `\n<fieldset class=\"radiogroup\">\n  <legend>Set field's size</legend>\n  <ul class=\"radio\">\n    <li>\n    <input type=\"radio\" name=\"fieldSizeId\" id=\"fieldSizeId1\" value=\"1\" />\n    <label for=\"fieldSizeId1\">beginner - 4 x 4</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"fieldSizeId\" id=\"fieldSizeId2\" value=\"2\" />\n    <label for=\"fieldSizeId2\">proficient - 6 x 5</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"fieldSizeId\" id=\"fieldSizeId3\" value=\"3\" />\n    <label for=\"fieldSizeId3\">expert - 8 x 6</label>\n    </li>\n  </ul>\n</fieldset>\n\n<fieldset class=\"radiogroup\">\n  <legend>Who is the opponent?</legend>\n  <ul class=\"radio\">\n    <li>\n    <input type=\"radio\" name=\"opponentId\" id=\"opponentId1\" value=\"1\" />\n    <label for=\"opponentId1\">one player</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"opponentId\" id=\"opponentId2\" value=\"2\" />\n    <label for=\"opponentId2\">vs Robot</label>\n    </li>\n    <li>\n    <input type=\"radio\" name=\"opponentId\" id=\"opponentId3\" value=\"3\" />\n    <label for=\"opponentId3\">two players</label>\n    </li>\n  </ul>\n</fieldset>\n\n    `;\n\n    const defaultParams = {\n      name: 'setSettingsForm',\n      class: 'set-settings-modal',\n      logo: '<i class=\"fas fa-sliders-h\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Settings',\n      formContent: formContent,\n      confirmBtn: 'OK'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n    super.init();\n    this.setFormEventHandlers(gameSettings);\n  }\n\n  setFormEventHandlers (gameSettings) {\n    this.modalEl.querySelector(`#fieldSizeId${gameSettings.fieldsizeId}`).checked = true;\n    this.modalEl.querySelector(`#opponentId${gameSettings.opponentId}`).checked = true;\n\n    const generateSetGameSettingsEvent = settings => {\n      const setGameSettingsEvent = new CustomEvent('setGameSettings', {\n        bubbles: true,\n        detail: settings\n      });\n      document.dispatchEvent(setGameSettingsEvent);\n    };\n\n    this.confirmBtn = this.modalEl.querySelector('.confirm-btn');\n    this.confirmBtn.addEventListener('click', e => {\n      e.preventDefault();\n      const fielsizeValue = this.modalEl.querySelector('input[name=\"fieldSizeId\"]:checked').value;\n      gameSettings.fieldsizeId = parseInt(fielsizeValue);\n      const opponentValue = this.modalEl.querySelector('input[name=\"opponentId\"]:checked').value;\n      gameSettings.opponentId = parseInt(opponentValue);\n      generateSetGameSettingsEvent(gameSettings);\n      this.closeModal(this.modalEl);\n    });\n  }\n\n}\n\n// CONCATENATED MODULE: ./src/js/best-results-modal.js\n\n\n\nclass best_results_modal_BestResultsModal extends Modal {\n\n  constructor (params, gameSettings, user) {\n\n    const defaultParams = {\n      name: 'BestResultsForm',\n      class: 'best-results-modal',\n      logo: '<i class=\"fas fa-trophy\"></i>',\n      close: '<i class=\"far fa-times-circle\"></i>',\n      title: 'Best Results',\n      content: 'Best Results Tables',\n      formContent: '',\n      confirmBtn: 'OK'\n    };\n\n    const paramsAll = Object.assign(defaultParams, params);\n\n    super(paramsAll);\n    super.init();\n    this.user = user;\n    this.http = new Http();\n\n    this.getResults(gameSettings).then( ([users, results]) => {\n      this.renderTables(users, results);\n    });\n\n    this.setHandlers();\n\n  }\n\n  getResults (gameSettings) {\n    return Promise.all([this.http.loadAllUsers(), this.http.loadAllResults()])\n      .then( ([users, results]) => {\n        return [\n          users,\n          results.filter( item => {\n            return ( parseInt(item.fieldsize_id) === gameSettings.fieldsizeId\n              && parseInt(item.opponent_id) === gameSettings.opponentId );\n          })\n        ];\n      });\n  }\n\n  setHandlers () {\n    this.modalEl.querySelector('.confirm-btn').addEventListener('click', event => {\n      event.preventDefault();\n      this.closeModal(this.modalEl);\n    });\n  }\n\n  renderTables (users, results) {\n\n    const getNameById = id => users.find(u => u.id === id).name;\n\n    const rendTableBody = results => {\n      let template = '';\n      let i = 1;\n      results.forEach( res => {\n        template += (`\n          <tr class=\"${ res.user_id === this.user.id ? 'user-own-res' : '' }\">\n            <td>${i++}</td>\n            <td>${getNameById(res.user_id)}</td>\n            <td>${(res.time * 1e-3).toFixed(2)}</td>\n            <td>${res.flips}</td>\n          </tr>        \n        `);\n      });\n      return template;\n    };\n\n    const rendTable = header => {\n      return `\n<div class=\"results-table-container\">\n  <h3>${header}</h3>\n  <table class=\"results-table\">\n    <tr>\n      <th>No</th>\n      <th>Name</th>\n      <th>Time</th>\n      <th>Flips</th>\n    </tr>\n    ${rendTableBody(results)}\n    </table>\n</div>    \n    `;\n    };\n\n    let template = '';\n    results.sort( (a, b) => parseInt(a.time) - parseInt(b.time) );\n    template += rendTable('Best Time:');\n    results.sort( (a, b) => parseInt(a.flips) - parseInt(b.flips) );\n    template += rendTable('Best Flips:');\n\n    this.modalEl.querySelector('.content').innerHTML = template;\n\n  }\n\n\n}\n\n// CONCATENATED MODULE: ./src/main.js\n\n\n\n\n\n\n\nconst main_user = {\n  id: 0,\n  name: ''\n};\n\nconst main_gameSettings = {\n  fieldsizeId: 2,\n  opponentId: 1\n};\n\nconst game = new game_Game(main_gameSettings);\n\ndocument.addEventListener('gameIsOver', event => {\n  event.preventDefault();\n  gameOverHandler(event.detail);\n});\n\ndocument.querySelector('#new-game-button').addEventListener('click', event => {\n  event.preventDefault();\n  startNewGame(main_gameSettings);\n});\n\ndocument.querySelector('#login-button').addEventListener('click', event => {\n  event.preventDefault();\n  loginUserHandler(main_user);\n});\n\ndocument.addEventListener('loginUser', event => {\n  event.preventDefault();\n  loginUserEventHandler(event.detail);\n});\n\ndocument.querySelector('#settings-button').addEventListener('click', event => {\n  event.preventDefault();\n  setSettings(main_gameSettings);\n});\n\ndocument.querySelector('#results-button').addEventListener('click', event => {\n  event.preventDefault();\n  showResultsButtonHandler(main_gameSettings, main_user);\n});\n\n\ndocument.addEventListener('setGameSettings', event => {\n  event.preventDefault();\n  Object.assign(main_gameSettings, event.detail);\n  startNewGame(main_gameSettings);\n});\n\nconst startNewGame = gameSettings => {\n  game.startNewGame(gameSettings);\n};\n\nconst setSettings = settings => {\n  const setSettingsModal = new set_settings_modal_SetSettingsModal({}, settings);\n};\n\nconst loginUserEventHandler = resp => {\n  Object.assign(main_user, resp);\n  document.querySelector('#login-button').innerHTML = `\n    <i class=\"fas fa-user-check\"></i>\n    <span>${main_user.name}</span>        \n`;\n};\n\nconst loginUserHandler = user => {\n  const loginUserModal = new login_modal_LoginUserModal();\n};\n\nconst gameOverHandler = results => {\n  const message = game_over_modal_GameOverModal.parseResults(results);\n  message.concat(' ');\n\n  const modal = new game_over_modal_GameOverModal({content: message}, main_user);\n\n  document.querySelector('.confirm-btn').addEventListener('click', event => {\n    event.preventDefault();\n    if ( document.forms.gameOverForm.isSaveResult.checked ) {\n      const sendData = {\n        user_id: main_user.id,\n        fieldsize_id: main_gameSettings.fieldsizeId,\n        opponent_id: main_gameSettings.opponentId,\n        time: results.endTime - results.startTime,\n        flips: results.flipped\n      };\n      const http = new Http();\n      http.saveResult(sendData);\n    }\n    startNewGame(main_gameSettings);\n    modal.closeModal(modal.modalEl);\n  });\n};\n\nconst showResultsButtonHandler = (gameSettings, user) => {\n  const bestResultsModal = new best_results_modal_BestResultsModal({}, gameSettings, user);\n};\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")}]);